{
  "contractName": "RefundableCrowd",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "Closed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RefundsEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiaryWithdraw",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum RefundEscrow.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Closed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiaryWithdraw\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum RefundEscrow.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawalAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract that adds a funding goal, and the possibility of users getting a refund if goal is not met.\",\"kind\":\"dev\",\"methods\":{\"beneficiaryWithdraw()\":{\"details\":\"Withdraws the beneficiary's funds.\"},\"claimRefund()\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful\"},\"close()\":{\"details\":\"Allows for the beneficiary to withdraw their funds, rejecting further deposits.\"},\"constructor\":{\"details\":\"Constructor, creates RefundEscrow.\",\"params\":{\"_goal\":\"Funding goal\"}},\"deposit(address)\":{\"details\":\"Stores funds that may later be refunded.\",\"params\":{\"_refundee\":\"The address funds will be sent to if a refund occurs.\"}},\"enableRefunds()\":{\"details\":\"Allows for refunds to take place, rejecting further deposits.\"},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"returns\":{\"_0\":\"Whether funding goal was reached\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to.\"}},\"withdrawalAllowed()\":{\"details\":\"Returns whether refundees can withdraw their deposits (be refunded).\"},\"withdrawalAllowed(address)\":{\"details\":\"Returns whether an address is allowed to withdraw their funds. To be implemented by derived contracts.\",\"params\":{\"payee\":\"The destination address of the funds.\"}}},\"title\":\"RefundableCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokenPurchase(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RefundableCrowd.sol\":\"RefundableCrowd\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x6abaf4ab23087b78eacfc402eec11a9e497e0b59239bc6987127d30c83bfd459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7632af827e6819385d822e05dfad4e148e80bdf478df1e87d9241ac27238c0d6\",\"dweb:/ipfs/QmbRXZehjPZ7jmEQSjodUURGPua7myMwD8JCMjBMUPe5ce\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"openzeppelin-solidity/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xf71d228abc2df1a5020ba208b237718e22cad6b3532f5e8f1021f4f15068e290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e42465b2c37a5d9286678ad167ed75691cb7bd2f6abcb677e7820ac58263a723\",\"dweb:/ipfs/QmdxVmnFC6ELiJLcQauqJxR353hjT2eNQ5ELHv1j46KeHi\"]},\"openzeppelin-solidity/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0x10a40dfab727e06bb3472d1bc9ccf145a604b0c9889d5c7a2eff64d72348eb21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://674750c34ed03e9ecf7f0714e874de372807bde3999ac2046dfbf7965926780e\",\"dweb:/ipfs/QmVw86CgPowu2Zd3fiJmGmK1vNhoLvcWdY9cUaFDwCbanN\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0xacded313eb5dfee414e3adf5d45bb5e7c57dfd983185b4e7078aeafdba563314\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51374873c5768d8a9095a7e664e75474029cfac1564cac59d184118afd3121c\",\"dweb:/ipfs/QmSqJKiBEgraJw3iLTbCGfqwBQDCHothGGbifE8envJ2JR\"]},\"project:/contracts/FinalizableCrowdsale.sol\":{\"keccak256\":\"0xbc012ae358dfd39642843b154c140f5ed96fe842e23a1f3bee0ef759ae33a086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa3acfd82f7a3338411e21229615b422bb84fd6f7305490c4b653f5773fb63a5\",\"dweb:/ipfs/QmXRS49ViE8eEQyFL7ZM8SMtnaB78tfGLRBNEV6RmQx8zw\"]},\"project:/contracts/RefundEscrow.sol\":{\"keccak256\":\"0x5858ce8bdb86392a478d233706370edf0b5e74a70a35e5e796f3796bdfc97930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac5b1f9a923765144840a3686f8095a0df66cb49e75e612aa3f94ce85f32788\",\"dweb:/ipfs/QmU5ipFnvKdB4tbVkJTzyz4oi1Mhio1zXqwqChAYLtxAoR\"]},\"project:/contracts/RefundableCrowd.sol\":{\"keccak256\":\"0x907bceef24c6467b1c378ee81f7ab2a640e3c5dc8187abfd85e0bcbe425bc668\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08728ea9b3083725786253fb29ddd5b552e9f209b40711ba015e685eb80962f5\",\"dweb:/ipfs/QmZog25yBhdwuwREHuksYYQVYBxtetiuMZoUUGnejCKtzh\"]},\"project:/contracts/TimeCrowd.sol\":{\"keccak256\":\"0x79ee3b28a1df11d7207a8f1049a3f12e29b6ce208b850807818710c84dd3b943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d8f46c82ffa847a7b7bed89f0d6ad3077222922935b6ab4e98a469ba354e2a\",\"dweb:/ipfs/QmSBywh9GUZYSxTydF9RCPAMWKCsA8pr6maTpw8GTWMmim\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x7cb9263f115e4f3581119a64f6e1d50c9dcc07b0dd8b2df50c5d03ef5d0763a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6bed25fa89cff09b790ed328422a2e10b9e02201fb1d90ddea324f33fb7e87f\",\"dweb:/ipfs/QmS6i9Di88aMbQh3wxVpQWdHLj1QuycpKzDNhYRcNek3BB\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\n\nimport \"./math/SafeMath.sol\";\nimport \"./FinalizableCrowdsale.sol\";\n\nimport \"./RefundEscrow.sol\";\n\n\n/**\n * @title RefundableCrowdsale\n * @dev Extension of Crowdsale contract that adds a funding goal, and\n * the possibility of users getting a refund if goal is not met.\n */\nabstract contract RefundableCrowd is FinalizableCrowdsale , RefundEscrow {\n  using SafeMath for uint256;\n    \n\n  // minimum amount of funds to be raised in weis\n  uint256 public goal;\n\n  // refund escrow used to hold funds while crowdsale is running\n   RefundEscrow private  escrow;\n\n  /**\n   * @dev Constructor, creates RefundEscrow.\n   * @param _goal Funding goal\n   */\n  constructor(uint256 _goal)  {\n    require(_goal > 0);\n    //  escrow = new RefundEscrow(wallet);\n    RefundEscrow(wallet);\n    goal = _goal;\n  }\n\n  /**\n   * @dev Investors can claim refunds here if crowdsale is unsuccessful\n   */\n  function claimRefund() public view  {\n    require(isFinalized);\n    require(!goalReached());\n   \n  }\n\n  /**\n   * @dev Checks whether funding goal was reached.\n   * @return Whether funding goal was reached\n   */\n  function goalReached() public view returns (bool) {\n    return weiRaised >= goal;\n  }\n\n  /**\n   * @dev escrow finalization task, called when owner calls finalize()\n   */\n  function finalization() internal override  {\n    if (goalReached()) {\n      escrow.close();\n      escrow.beneficiaryWithdraw();\n    } else {\n      escrow.enableRefunds();\n    }\n\n    super.finalization();\n  }\n\n  /**\n   * @dev Overrides Crowdsale fund forwarding, sending funds to escrow.\n   */\n  function _forwardFunds() internal {\n    //  escrow.deposit.value(msg.value)(msg.sender);\n  }\n\n}",
  "sourcePath": "/home/muhammadbabarhanif/new ICO's/contracts/RefundableCrowd.sol",
  "ast": {
    "absolutePath": "project:/contracts/RefundableCrowd.sol",
    "exportedSymbols": {
      "Address": [
        1155
      ],
      "ConditionalEscrow": [
        1212
      ],
      "Context": [
        1177
      ],
      "Crowdsale": [
        1495
      ],
      "ERC20": [
        692
      ],
      "Escrow": [
        1308
      ],
      "FinalizableCrowdsale": [
        1568
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        860
      ],
      "Ownable": [
        104
      ],
      "RefundEscrow": [
        1844
      ],
      "RefundableCrowd": [
        1946
      ],
      "SafeMath": [
        2535
      ],
      "TimedCrowd": [
        2114
      ]
    },
    "id": 1947,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1846,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:16"
      },
      {
        "absolutePath": "project:/contracts/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 1847,
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 2536,
        "src": "67:29:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 1848,
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 1569,
        "src": "97:36:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RefundEscrow.sol",
        "file": "./RefundEscrow.sol",
        "id": 1849,
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 1845,
        "src": "135:28:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1851,
              "name": "FinalizableCrowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1568,
              "src": "376:20:16"
            },
            "id": 1852,
            "nodeType": "InheritanceSpecifier",
            "src": "376:20:16"
          },
          {
            "baseName": {
              "id": 1853,
              "name": "RefundEscrow",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1844,
              "src": "399:12:16"
            },
            "id": 1854,
            "nodeType": "InheritanceSpecifier",
            "src": "399:12:16"
          }
        ],
        "contractDependencies": [
          104,
          1177,
          1212,
          1308,
          1495,
          1568,
          1844,
          2114
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1850,
          "nodeType": "StructuredDocumentation",
          "src": "166:172:16",
          "text": " @title RefundableCrowdsale\n @dev Extension of Crowdsale contract that adds a funding goal, and\n the possibility of users getting a refund if goal is not met."
        },
        "fullyImplemented": false,
        "id": 1946,
        "linearizedBaseContracts": [
          1946,
          1844,
          1212,
          1308,
          1568,
          104,
          1177,
          2114,
          1495
        ],
        "name": "RefundableCrowd",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1857,
            "libraryName": {
              "id": 1855,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2535,
              "src": "422:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "416:27:16",
            "typeName": {
              "id": 1856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "435:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "40193883",
            "id": 1859,
            "mutability": "mutable",
            "name": "goal",
            "nodeType": "VariableDeclaration",
            "scope": 1946,
            "src": "502:19:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1858,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1862,
            "mutability": "mutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "scope": 1946,
            "src": "592:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$1844",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "id": 1861,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1860,
                "name": "RefundEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1844,
                "src": "592:12:16"
              },
              "referencedDeclaration": 1844,
              "src": "592:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                "typeString": "contract RefundEscrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1882,
              "nodeType": "Block",
              "src": "741:116:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1869,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1865,
                          "src": "755:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "763:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "755:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "747:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:18:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1873,
                  "nodeType": "ExpressionStatement",
                  "src": "747:18:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1875,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "827:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1874,
                      "name": "RefundEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1844,
                      "src": "814:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_RefundEscrow_$1844_$",
                        "typeString": "type(contract RefundEscrow)"
                      }
                    },
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "814:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "id": 1877,
                  "nodeType": "ExpressionStatement",
                  "src": "814:20:16"
                },
                {
                  "expression": {
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1878,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "840:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1879,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "847:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "840:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1881,
                  "nodeType": "ExpressionStatement",
                  "src": "840:12:16"
                }
              ]
            },
            "documentation": {
              "id": 1863,
              "nodeType": "StructuredDocumentation",
              "src": "625:85:16",
              "text": " @dev Constructor, creates RefundEscrow.\n @param _goal Funding goal"
            },
            "id": 1883,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "725:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:15:16"
            },
            "returnParameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:0:16"
            },
            "scope": 1946,
            "src": "713:144:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "981:64:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1888,
                        "name": "isFinalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "995:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "987:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1890,
                  "nodeType": "ExpressionStatement",
                  "src": "987:20:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1021:14:16",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1892,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "1022:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1022:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1013:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:23:16"
                }
              ]
            },
            "documentation": {
              "id": 1884,
              "nodeType": "StructuredDocumentation",
              "src": "861:81:16",
              "text": " @dev Investors can claim refunds here if crowdsale is unsuccessful"
            },
            "functionSelector": "b5545a3c",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:2:16"
            },
            "returnParameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:0:16"
            },
            "scope": 1946,
            "src": "945:100:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1908,
              "nodeType": "Block",
              "src": "1208:35:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1904,
                      "name": "weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "1221:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1905,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1234:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1221:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1903,
                  "id": 1907,
                  "nodeType": "Return",
                  "src": "1214:24:16"
                }
              ]
            },
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "1049:106:16",
              "text": " @dev Checks whether funding goal was reached.\n @return Whether funding goal was reached"
            },
            "functionSelector": "7d3d6522",
            "id": 1909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:2:16"
            },
            "returnParameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "1202:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:6:16"
            },
            "scope": 1946,
            "src": "1158:85:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1567
            ],
            "body": {
              "id": 1939,
              "nodeType": "Block",
              "src": "1373:164:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1914,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "1383:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:13:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1932,
                    "nodeType": "Block",
                    "src": "1469:37:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1927,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "1477:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1819,
                            "src": "1477:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1477:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1931,
                        "nodeType": "ExpressionStatement",
                        "src": "1477:22:16"
                      }
                    ]
                  },
                  "id": 1933,
                  "nodeType": "IfStatement",
                  "src": "1379:127:16",
                  "trueBody": {
                    "id": 1926,
                    "nodeType": "Block",
                    "src": "1398:65:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1916,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "1406:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1797,
                            "src": "1406:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1406:14:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ExpressionStatement",
                        "src": "1406:14:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1921,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "1428:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1831,
                            "src": "1428:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$__$",
                              "typeString": "function () view external"
                            }
                          },
                          "id": 1924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1428:28:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1925,
                        "nodeType": "ExpressionStatement",
                        "src": "1428:28:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1934,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1512:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundableCrowd_$1946_$",
                          "typeString": "type(contract super RefundableCrowd)"
                        }
                      },
                      "id": 1936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1567,
                      "src": "1512:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:20:16"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "1247:80:16",
              "text": " @dev escrow finalization task, called when owner calls finalize()"
            },
            "id": 1940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1363:8:16"
            },
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:16"
            },
            "returnParameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:16"
            },
            "scope": 1946,
            "src": "1330:207:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1944,
              "nodeType": "Block",
              "src": "1659:58:16",
              "statements": []
            },
            "documentation": {
              "id": 1941,
              "nodeType": "StructuredDocumentation",
              "src": "1541:81:16",
              "text": " @dev Overrides Crowdsale fund forwarding, sending funds to escrow."
            },
            "id": 1945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:16"
            },
            "returnParameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:0:16"
            },
            "scope": 1946,
            "src": "1625:92:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1947,
        "src": "339:1381:16"
      }
    ],
    "src": "32:1688:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/RefundableCrowd.sol",
    "exportedSymbols": {
      "Address": [
        1155
      ],
      "ConditionalEscrow": [
        1212
      ],
      "Context": [
        1177
      ],
      "Crowdsale": [
        1495
      ],
      "ERC20": [
        692
      ],
      "Escrow": [
        1308
      ],
      "FinalizableCrowdsale": [
        1568
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        860
      ],
      "Ownable": [
        104
      ],
      "RefundEscrow": [
        1844
      ],
      "RefundableCrowd": [
        1946
      ],
      "SafeMath": [
        2535
      ],
      "TimedCrowd": [
        2114
      ]
    },
    "id": 1947,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1846,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:16"
      },
      {
        "absolutePath": "project:/contracts/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 1847,
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 2536,
        "src": "67:29:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 1848,
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 1569,
        "src": "97:36:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RefundEscrow.sol",
        "file": "./RefundEscrow.sol",
        "id": 1849,
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 1845,
        "src": "135:28:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1851,
              "name": "FinalizableCrowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1568,
              "src": "376:20:16"
            },
            "id": 1852,
            "nodeType": "InheritanceSpecifier",
            "src": "376:20:16"
          },
          {
            "baseName": {
              "id": 1853,
              "name": "RefundEscrow",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1844,
              "src": "399:12:16"
            },
            "id": 1854,
            "nodeType": "InheritanceSpecifier",
            "src": "399:12:16"
          }
        ],
        "contractDependencies": [
          104,
          1177,
          1212,
          1308,
          1495,
          1568,
          1844,
          2114
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1850,
          "nodeType": "StructuredDocumentation",
          "src": "166:172:16",
          "text": " @title RefundableCrowdsale\n @dev Extension of Crowdsale contract that adds a funding goal, and\n the possibility of users getting a refund if goal is not met."
        },
        "fullyImplemented": false,
        "id": 1946,
        "linearizedBaseContracts": [
          1946,
          1844,
          1212,
          1308,
          1568,
          104,
          1177,
          2114,
          1495
        ],
        "name": "RefundableCrowd",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1857,
            "libraryName": {
              "id": 1855,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2535,
              "src": "422:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "416:27:16",
            "typeName": {
              "id": 1856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "435:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "40193883",
            "id": 1859,
            "mutability": "mutable",
            "name": "goal",
            "nodeType": "VariableDeclaration",
            "scope": 1946,
            "src": "502:19:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1858,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1862,
            "mutability": "mutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "scope": 1946,
            "src": "592:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$1844",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "id": 1861,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1860,
                "name": "RefundEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1844,
                "src": "592:12:16"
              },
              "referencedDeclaration": 1844,
              "src": "592:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                "typeString": "contract RefundEscrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1882,
              "nodeType": "Block",
              "src": "741:116:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1869,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1865,
                          "src": "755:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "763:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "755:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "747:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:18:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1873,
                  "nodeType": "ExpressionStatement",
                  "src": "747:18:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1875,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "827:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1874,
                      "name": "RefundEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1844,
                      "src": "814:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_RefundEscrow_$1844_$",
                        "typeString": "type(contract RefundEscrow)"
                      }
                    },
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "814:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "id": 1877,
                  "nodeType": "ExpressionStatement",
                  "src": "814:20:16"
                },
                {
                  "expression": {
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1878,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "840:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1879,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "847:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "840:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1881,
                  "nodeType": "ExpressionStatement",
                  "src": "840:12:16"
                }
              ]
            },
            "documentation": {
              "id": 1863,
              "nodeType": "StructuredDocumentation",
              "src": "625:85:16",
              "text": " @dev Constructor, creates RefundEscrow.\n @param _goal Funding goal"
            },
            "id": 1883,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "725:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:15:16"
            },
            "returnParameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:0:16"
            },
            "scope": 1946,
            "src": "713:144:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "981:64:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1888,
                        "name": "isFinalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "995:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "987:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1890,
                  "nodeType": "ExpressionStatement",
                  "src": "987:20:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1021:14:16",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1892,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "1022:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1022:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1013:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:23:16"
                }
              ]
            },
            "documentation": {
              "id": 1884,
              "nodeType": "StructuredDocumentation",
              "src": "861:81:16",
              "text": " @dev Investors can claim refunds here if crowdsale is unsuccessful"
            },
            "functionSelector": "b5545a3c",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:2:16"
            },
            "returnParameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:0:16"
            },
            "scope": 1946,
            "src": "945:100:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1908,
              "nodeType": "Block",
              "src": "1208:35:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1904,
                      "name": "weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "1221:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1905,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1234:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1221:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1903,
                  "id": 1907,
                  "nodeType": "Return",
                  "src": "1214:24:16"
                }
              ]
            },
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "1049:106:16",
              "text": " @dev Checks whether funding goal was reached.\n @return Whether funding goal was reached"
            },
            "functionSelector": "7d3d6522",
            "id": 1909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:2:16"
            },
            "returnParameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "1202:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:6:16"
            },
            "scope": 1946,
            "src": "1158:85:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1567
            ],
            "body": {
              "id": 1939,
              "nodeType": "Block",
              "src": "1373:164:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1914,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "1383:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:13:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1932,
                    "nodeType": "Block",
                    "src": "1469:37:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1927,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "1477:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1819,
                            "src": "1477:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1477:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1931,
                        "nodeType": "ExpressionStatement",
                        "src": "1477:22:16"
                      }
                    ]
                  },
                  "id": 1933,
                  "nodeType": "IfStatement",
                  "src": "1379:127:16",
                  "trueBody": {
                    "id": 1926,
                    "nodeType": "Block",
                    "src": "1398:65:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1916,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "1406:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1797,
                            "src": "1406:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1406:14:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ExpressionStatement",
                        "src": "1406:14:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1921,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "1428:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1844",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1831,
                            "src": "1428:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$__$",
                              "typeString": "function () view external"
                            }
                          },
                          "id": 1924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1428:28:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1925,
                        "nodeType": "ExpressionStatement",
                        "src": "1428:28:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1934,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1512:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundableCrowd_$1946_$",
                          "typeString": "type(contract super RefundableCrowd)"
                        }
                      },
                      "id": 1936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1567,
                      "src": "1512:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:20:16"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "1247:80:16",
              "text": " @dev escrow finalization task, called when owner calls finalize()"
            },
            "id": 1940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1363:8:16"
            },
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:16"
            },
            "returnParameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:16"
            },
            "scope": 1946,
            "src": "1330:207:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1944,
              "nodeType": "Block",
              "src": "1659:58:16",
              "statements": []
            },
            "documentation": {
              "id": 1941,
              "nodeType": "StructuredDocumentation",
              "src": "1541:81:16",
              "text": " @dev Overrides Crowdsale fund forwarding, sending funds to escrow."
            },
            "id": 1945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:16"
            },
            "returnParameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:0:16"
            },
            "scope": 1946,
            "src": "1625:92:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1947,
        "src": "339:1381:16"
      }
    ],
    "src": "32:1688:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-10T18:04:34.441Z",
  "devdoc": {
    "details": "Extension of Crowdsale contract that adds a funding goal, and the possibility of users getting a refund if goal is not met.",
    "kind": "dev",
    "methods": {
      "beneficiaryWithdraw()": {
        "details": "Withdraws the beneficiary's funds."
      },
      "claimRefund()": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful"
      },
      "close()": {
        "details": "Allows for the beneficiary to withdraw their funds, rejecting further deposits."
      },
      "constructor": {
        "details": "Constructor, creates RefundEscrow.",
        "params": {
          "_goal": "Funding goal"
        }
      },
      "deposit(address)": {
        "details": "Stores funds that may later be refunded.",
        "params": {
          "_refundee": "The address funds will be sent to if a refund occurs."
        }
      },
      "enableRefunds()": {
        "details": "Allows for refunds to take place, rejecting further deposits."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "returns": {
          "_0": "Whether funding goal was reached"
        }
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "returns": {
          "_0": "Whether crowdsale period has elapsed"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address)": {
        "details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "The address whose funds will be withdrawn and transferred to."
        }
      },
      "withdrawalAllowed()": {
        "details": "Returns whether refundees can withdraw their deposits (be refunded)."
      },
      "withdrawalAllowed(address)": {
        "details": "Returns whether an address is allowed to withdraw their funds. To be implemented by derived contracts.",
        "params": {
          "payee": "The destination address of the funds."
        }
      }
    },
    "title": "RefundableCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokenPurchase(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}