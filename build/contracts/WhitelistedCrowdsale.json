{
  "contractName": "WhitelistedCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ROLE_WHITELISTED",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "addAddressToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "addAddressesToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investorHardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investorMinCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "removeAddressFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "removeAddressesFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getUserContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROLE_WHITELISTED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"addAddressToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"addAddressesToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"checkRole\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getUserContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorHardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorMinCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeAddressFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"removeAddressesFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"checkRole(address,string)\":{\"details\":\"reverts if addr does not have role\",\"params\":{\"_operator\":\"address\",\"_role\":\"the name of the role // reverts\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getUserContribution(address)\":{\"details\":\"Returns the amount contributed so far by a sepecific user.\",\"params\":{\"_beneficiary\":\"Address of contributor\"},\"returns\":{\"_0\":\"User contribution so far\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"hasRole(address,string)\":{\"details\":\"determine if addr has role\",\"params\":{\"_operator\":\"address\",\"_role\":\"the name of the role\"},\"returns\":{\"_0\":\"bool\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"whitelist(address)\":{\"details\":\"getter to determine if address is in whitelist\"}},\"version\":1},\"userdoc\":{\"events\":{\"TokenPurchase(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/WhitelistedCrowdsale.sol\":\"WhitelistedCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/CappedCrowdSale.sol\":{\"keccak256\":\"0x9657c4b58a5ab484201c7d01aceba5be86dcb75e31c5e646349ea10aa02746ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fccd460ff6f4e54b32c9398e48fa6bb577e67f44cbb9d2d080de6160dc1b5f5e\",\"dweb:/ipfs/Qmb6srhdWz5fYD6z7agnxNakyB5TYmeReV6WF8fqvtnpBM\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0xacded313eb5dfee414e3adf5d45bb5e7c57dfd983185b4e7078aeafdba563314\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51374873c5768d8a9095a7e664e75474029cfac1564cac59d184118afd3121c\",\"dweb:/ipfs/QmSqJKiBEgraJw3iLTbCGfqwBQDCHothGGbifE8envJ2JR\"]},\"project:/contracts/MintedCrowdsale.sol\":{\"keccak256\":\"0x0202b7f062b37ec5e175226019db879518a182242ef5eb368ac45ffc438f7768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://775a547f9e6a8ee6d1ab626acd95b4378dcbc4441f83693debfa75ed280a65e5\",\"dweb:/ipfs/QmWCeCKDK9SC9VFoYhLf4Wsxvm26GmcAQcdW7t3RsQDqTc\"]},\"project:/contracts/RBAC.sol\":{\"keccak256\":\"0xa0930a79fb7c0dbc3945593b8c5b37f9937c3a1c6d21f1ab423ad8116f7feed8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4083b659644fd9a8c250e3f566b072933e280d08ea930f39cdbeaaa548aa2b19\",\"dweb:/ipfs/QmcsFP32fv4dm76dfsTs5Uo1WKNHjtvg1HuN3RYCmK3sVa\"]},\"project:/contracts/Roles.sol\":{\"keccak256\":\"0x81e8df60bd71743b14a329f07c030327dda292d1f59450a0f0d6c777b16c11d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698f3755f225e550e4b9c945cd8440df35a3bd64874903c36c4fc80b5ea257e6\",\"dweb:/ipfs/QmfRdXmPsRjLyxMBtj7jksaVkwXE1RzavsL2RPJ1DDUjcB\"]},\"project:/contracts/TimeCrowd.sol\":{\"keccak256\":\"0x79ee3b28a1df11d7207a8f1049a3f12e29b6ce208b850807818710c84dd3b943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d8f46c82ffa847a7b7bed89f0d6ad3077222922935b6ab4e98a469ba354e2a\",\"dweb:/ipfs/QmSBywh9GUZYSxTydF9RCPAMWKCsA8pr6maTpw8GTWMmim\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0x47364599f27d3c7ca1d9345986350de4dcac94a152011196e545b01fd8b57ef5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c66b2f249be1390e436fb60be2e2610b1db8b185fd323f34d4d1773e203ba1a\",\"dweb:/ipfs/QmZZ9EFADPh2W8MhxBSaq4gNeLDCeMBc6kDsA6wF4QzHzU\"]},\"project:/contracts/Whitelistcrowd.sol\":{\"keccak256\":\"0x4926fa6a1bc3a0b609eb106d242a8b2eecb48bca84c7dd56bf17e728dbe9a847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0d730ab341f8b70968ed5197580eade48afc9cbcfe8012b1b3eef7cdeb5d55e\",\"dweb:/ipfs/QmSE7yKpi6tHxVxg7jGCPfbJpVkZFLaAnWymgdhryJWFNT\"]},\"project:/contracts/WhitelistedCrowdsale.sol\":{\"keccak256\":\"0xb061f3792e60a49e37694440a4a4034fdd2cfb831607af894d8df74e34433a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bed6c2d49f0be3148df91bf0a9489789f024e8c8dea937506e2d765b85e41d3f\",\"dweb:/ipfs/QmWKXrgzZPsC4ffzmwTfBcGRZDHEQxRhRiJdoXgWzqHsA1\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x7cb9263f115e4f3581119a64f6e1d50c9dcc07b0dd8b2df50c5d03ef5d0763a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6bed25fa89cff09b790ed328422a2e10b9e02201fb1d90ddea324f33fb7e87f\",\"dweb:/ipfs/QmS6i9Di88aMbQh3wxVpQWdHLj1QuycpKzDNhYRcNek3BB\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\n\nimport \"./Crowdsale.sol\";\nimport \"./MintedCrowdsale.sol\";\nimport \"./CappedCrowdSale.sol\";\nimport \"./TimeCrowd.sol\";\nimport \"./Whitelistcrowd.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol\";\n\nabstract contract WhitelistedCrowdsale is Crowdsale, TimedCrowd, WhitelistedCrowd, ERC20Capped {\n\n  // Track investor contributions\n  uint256 public investorMinCap = 2000000000000000; // 0.002 ether\n  uint256 public investorHardCap = 50000000000000000000; // 50 ether\n  mapping(address => uint256) public contributions;\n\n  constructor(\n    uint256 _rate,\n    address _wallet,\n    ERC20 _token,\n    uint256 _cap,\n    uint256 _openingTime,\n    uint256 _closingTime\n  )\n    Crowdsale(_rate, _wallet, _token)\n     ERC20Capped (_cap)\n    TimedCrowd(_openingTime, _closingTime)\n    \n  {\n\n  }\n\n  /**\n  * @dev Returns the amount contributed so far by a sepecific user.\n  * @param _beneficiary Address of contributor\n  * @return User contribution so far\n  */\n  function getUserContribution(address _beneficiary)\n    public view returns (uint256)\n  {\n    return contributions[_beneficiary];\n  }\n\n  /**\n  * @dev Extend parent behavior requiring purchase to respect investor min/max funding cap.\n  * @param _beneficiary Token purchaser\n  * @param _weiAmount Amount of wei contributed\n  */\n  function _preValidatePurchase(\n    address _beneficiary,\n    uint256 _weiAmount\n  )\n    internal\n    override(Crowdsale,TimedCrowd , WhitelistedCrowd)\n    pure\n  {\n    super._preValidatePurchase(_beneficiary, _weiAmount);\n    // uint256 _existingContribution = contributions[_beneficiary];\n    // uint256 _newContribution = _existingContribution.add(_weiAmount);\n    // require(_newContribution >= investorMinCap && _newContribution <= investorHardCap);\n    // contributions[_beneficiary] = _newContribution;\n  }\n\n}",
  "sourcePath": "/home/muhammadbabarhanif/new ICO's/contracts/WhitelistedCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/WhitelistedCrowdsale.sol",
    "exportedSymbols": {
      "CappedCrowdsale": [
        1372
      ],
      "Context": [
        1177
      ],
      "Crowdsale": [
        1495
      ],
      "ERC20": [
        692
      ],
      "ERC20Capped": [
        835
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        860
      ],
      "MintedCrowdsale": [
        1592
      ],
      "Ownable": [
        104
      ],
      "RBAC": [
        1707
      ],
      "Roles": [
        2025
      ],
      "SafeMath": [
        2535
      ],
      "TimedCrowd": [
        2114
      ],
      "Whitelist": [
        2320
      ],
      "WhitelistedCrowd": [
        2347
      ],
      "WhitelistedCrowdsale": [
        2436
      ]
    },
    "id": 2437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2349,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:22"
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "./Crowdsale.sol",
        "id": 2350,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 1496,
        "src": "67:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MintedCrowdsale.sol",
        "file": "./MintedCrowdsale.sol",
        "id": 2351,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 1593,
        "src": "93:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CappedCrowdSale.sol",
        "file": "./CappedCrowdSale.sol",
        "id": 2352,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 1373,
        "src": "125:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TimeCrowd.sol",
        "file": "./TimeCrowd.sol",
        "id": 2353,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 2115,
        "src": "157:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Whitelistcrowd.sol",
        "file": "./Whitelistcrowd.sol",
        "id": 2354,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 2348,
        "src": "183:30:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 2355,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 836,
        "src": "214:80:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2356,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1495,
              "src": "338:9:22"
            },
            "id": 2357,
            "nodeType": "InheritanceSpecifier",
            "src": "338:9:22"
          },
          {
            "baseName": {
              "id": 2358,
              "name": "TimedCrowd",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2114,
              "src": "349:10:22"
            },
            "id": 2359,
            "nodeType": "InheritanceSpecifier",
            "src": "349:10:22"
          },
          {
            "baseName": {
              "id": 2360,
              "name": "WhitelistedCrowd",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2347,
              "src": "361:16:22"
            },
            "id": 2361,
            "nodeType": "InheritanceSpecifier",
            "src": "361:16:22"
          },
          {
            "baseName": {
              "id": 2362,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 835,
              "src": "379:11:22"
            },
            "id": 2363,
            "nodeType": "InheritanceSpecifier",
            "src": "379:11:22"
          }
        ],
        "contractDependencies": [
          104,
          692,
          770,
          835,
          860,
          1177,
          1495,
          1707,
          2114,
          2320,
          2347
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 2436,
        "linearizedBaseContracts": [
          2436,
          835,
          692,
          860,
          770,
          2347,
          2320,
          1707,
          104,
          1177,
          2114,
          1495
        ],
        "name": "WhitelistedCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b25d7f54",
            "id": 2366,
            "mutability": "mutable",
            "name": "investorMinCap",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "430:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "430:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030303030303030303030303030",
              "id": 2365,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "462:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000_by_1",
                "typeString": "int_const 2000000000000000"
              },
              "value": "2000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed5db874",
            "id": 2369,
            "mutability": "mutable",
            "name": "investorHardCap",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "497:53:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530303030303030303030303030303030303030",
              "id": 2368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "530:20:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000"
              },
              "value": "50000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42e94c90",
            "id": 2373,
            "mutability": "mutable",
            "name": "contributions",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "566:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2372,
              "keyType": {
                "id": 2370,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "566:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2371,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "585:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2401,
              "nodeType": "Block",
              "src": "875:6:22",
              "statements": []
            },
            "id": 2402,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2389,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2375,
                    "src": "777:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2390,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2377,
                    "src": "784:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2391,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2380,
                    "src": "793:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 2392,
                "modifierName": {
                  "id": 2388,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1495,
                  "src": "767:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "767:33:22"
              },
              {
                "arguments": [
                  {
                    "id": 2394,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2382,
                    "src": "819:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2395,
                "modifierName": {
                  "id": 2393,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 835,
                  "src": "806:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "806:18:22"
              },
              {
                "arguments": [
                  {
                    "id": 2397,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2384,
                    "src": "840:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2398,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2386,
                    "src": "854:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2399,
                "modifierName": {
                  "id": 2396,
                  "name": "TimedCrowd",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2114,
                  "src": "829:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "829:38:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "636:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2377,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "655:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2380,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "676:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2378,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "676:5:22"
                    },
                    "referencedDeclaration": 692,
                    "src": "676:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2382,
                  "mutability": "mutable",
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "694:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "712:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "738:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:132:22"
            },
            "returnParameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:22"
            },
            "scope": 2436,
            "src": "619:262:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "1135:45:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2410,
                      "name": "contributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2373,
                      "src": "1148:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2412,
                    "indexExpression": {
                      "id": 2411,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2405,
                      "src": "1162:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1148:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2409,
                  "id": 2413,
                  "nodeType": "Return",
                  "src": "1141:34:22"
                }
              ]
            },
            "documentation": {
              "id": 2403,
              "nodeType": "StructuredDocumentation",
              "src": "885:160:22",
              "text": " @dev Returns the amount contributed so far by a sepecific user.\n @param _beneficiary Address of contributor\n @return User contribution so far"
            },
            "functionSelector": "bb8b2b47",
            "id": 2415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserContribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2405,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1077:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:22:22"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1124:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:9:22"
            },
            "scope": 2436,
            "src": "1048:132:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1448,
              2113,
              2346
            ],
            "body": {
              "id": 2434,
              "nodeType": "Block",
              "src": "1537:350:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2430,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "1570:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2431,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "1584:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2427,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1543:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_WhitelistedCrowdsale_$2436_$",
                          "typeString": "type(contract super WhitelistedCrowdsale)"
                        }
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2346,
                      "src": "1543:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) pure"
                      }
                    },
                    "id": 2432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:52:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2433,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:52:22"
                }
              ]
            },
            "documentation": {
              "id": 2416,
              "nodeType": "StructuredDocumentation",
              "src": "1184:188:22",
              "text": " @dev Extend parent behavior requiring purchase to respect investor min/max funding cap.\n @param _beneficiary Token purchaser\n @param _weiAmount Amount of wei contributed"
            },
            "id": 2435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2425,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2422,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1495,
                  "src": "1485:9:22"
                },
                {
                  "id": 2423,
                  "name": "TimedCrowd",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2114,
                  "src": "1495:10:22"
                },
                {
                  "id": 2424,
                  "name": "WhitelistedCrowd",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2347,
                  "src": "1508:16:22"
                }
              ],
              "src": "1476:49:22"
            },
            "parameters": {
              "id": 2421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "1410:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2420,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "1436:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1404:54:22"
            },
            "returnParameters": {
              "id": 2426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:0:22"
            },
            "scope": 2436,
            "src": "1375:512:22",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2437,
        "src": "296:1594:22"
      }
    ],
    "src": "32:1858:22"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/WhitelistedCrowdsale.sol",
    "exportedSymbols": {
      "CappedCrowdsale": [
        1372
      ],
      "Context": [
        1177
      ],
      "Crowdsale": [
        1495
      ],
      "ERC20": [
        692
      ],
      "ERC20Capped": [
        835
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        860
      ],
      "MintedCrowdsale": [
        1592
      ],
      "Ownable": [
        104
      ],
      "RBAC": [
        1707
      ],
      "Roles": [
        2025
      ],
      "SafeMath": [
        2535
      ],
      "TimedCrowd": [
        2114
      ],
      "Whitelist": [
        2320
      ],
      "WhitelistedCrowd": [
        2347
      ],
      "WhitelistedCrowdsale": [
        2436
      ]
    },
    "id": 2437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2349,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:22"
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "./Crowdsale.sol",
        "id": 2350,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 1496,
        "src": "67:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MintedCrowdsale.sol",
        "file": "./MintedCrowdsale.sol",
        "id": 2351,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 1593,
        "src": "93:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CappedCrowdSale.sol",
        "file": "./CappedCrowdSale.sol",
        "id": 2352,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 1373,
        "src": "125:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TimeCrowd.sol",
        "file": "./TimeCrowd.sol",
        "id": 2353,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 2115,
        "src": "157:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Whitelistcrowd.sol",
        "file": "./Whitelistcrowd.sol",
        "id": 2354,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 2348,
        "src": "183:30:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 2355,
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 836,
        "src": "214:80:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2356,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1495,
              "src": "338:9:22"
            },
            "id": 2357,
            "nodeType": "InheritanceSpecifier",
            "src": "338:9:22"
          },
          {
            "baseName": {
              "id": 2358,
              "name": "TimedCrowd",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2114,
              "src": "349:10:22"
            },
            "id": 2359,
            "nodeType": "InheritanceSpecifier",
            "src": "349:10:22"
          },
          {
            "baseName": {
              "id": 2360,
              "name": "WhitelistedCrowd",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2347,
              "src": "361:16:22"
            },
            "id": 2361,
            "nodeType": "InheritanceSpecifier",
            "src": "361:16:22"
          },
          {
            "baseName": {
              "id": 2362,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 835,
              "src": "379:11:22"
            },
            "id": 2363,
            "nodeType": "InheritanceSpecifier",
            "src": "379:11:22"
          }
        ],
        "contractDependencies": [
          104,
          692,
          770,
          835,
          860,
          1177,
          1495,
          1707,
          2114,
          2320,
          2347
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 2436,
        "linearizedBaseContracts": [
          2436,
          835,
          692,
          860,
          770,
          2347,
          2320,
          1707,
          104,
          1177,
          2114,
          1495
        ],
        "name": "WhitelistedCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b25d7f54",
            "id": 2366,
            "mutability": "mutable",
            "name": "investorMinCap",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "430:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "430:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030303030303030303030303030",
              "id": 2365,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "462:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000_by_1",
                "typeString": "int_const 2000000000000000"
              },
              "value": "2000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed5db874",
            "id": 2369,
            "mutability": "mutable",
            "name": "investorHardCap",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "497:53:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530303030303030303030303030303030303030",
              "id": 2368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "530:20:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000"
              },
              "value": "50000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42e94c90",
            "id": 2373,
            "mutability": "mutable",
            "name": "contributions",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "566:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2372,
              "keyType": {
                "id": 2370,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "566:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2371,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "585:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2401,
              "nodeType": "Block",
              "src": "875:6:22",
              "statements": []
            },
            "id": 2402,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2389,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2375,
                    "src": "777:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2390,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2377,
                    "src": "784:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2391,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2380,
                    "src": "793:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 2392,
                "modifierName": {
                  "id": 2388,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1495,
                  "src": "767:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "767:33:22"
              },
              {
                "arguments": [
                  {
                    "id": 2394,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2382,
                    "src": "819:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2395,
                "modifierName": {
                  "id": 2393,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 835,
                  "src": "806:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "806:18:22"
              },
              {
                "arguments": [
                  {
                    "id": 2397,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2384,
                    "src": "840:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2398,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2386,
                    "src": "854:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2399,
                "modifierName": {
                  "id": 2396,
                  "name": "TimedCrowd",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2114,
                  "src": "829:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "829:38:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "636:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2377,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "655:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2380,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "676:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2378,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "676:5:22"
                    },
                    "referencedDeclaration": 692,
                    "src": "676:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2382,
                  "mutability": "mutable",
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "694:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "712:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "738:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:132:22"
            },
            "returnParameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:22"
            },
            "scope": 2436,
            "src": "619:262:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "1135:45:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2410,
                      "name": "contributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2373,
                      "src": "1148:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2412,
                    "indexExpression": {
                      "id": 2411,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2405,
                      "src": "1162:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1148:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2409,
                  "id": 2413,
                  "nodeType": "Return",
                  "src": "1141:34:22"
                }
              ]
            },
            "documentation": {
              "id": 2403,
              "nodeType": "StructuredDocumentation",
              "src": "885:160:22",
              "text": " @dev Returns the amount contributed so far by a sepecific user.\n @param _beneficiary Address of contributor\n @return User contribution so far"
            },
            "functionSelector": "bb8b2b47",
            "id": 2415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserContribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2405,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1077:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:22:22"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1124:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:9:22"
            },
            "scope": 2436,
            "src": "1048:132:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1448,
              2113,
              2346
            ],
            "body": {
              "id": 2434,
              "nodeType": "Block",
              "src": "1537:350:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2430,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "1570:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2431,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "1584:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2427,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1543:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_WhitelistedCrowdsale_$2436_$",
                          "typeString": "type(contract super WhitelistedCrowdsale)"
                        }
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2346,
                      "src": "1543:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) pure"
                      }
                    },
                    "id": 2432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:52:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2433,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:52:22"
                }
              ]
            },
            "documentation": {
              "id": 2416,
              "nodeType": "StructuredDocumentation",
              "src": "1184:188:22",
              "text": " @dev Extend parent behavior requiring purchase to respect investor min/max funding cap.\n @param _beneficiary Token purchaser\n @param _weiAmount Amount of wei contributed"
            },
            "id": 2435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2425,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2422,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1495,
                  "src": "1485:9:22"
                },
                {
                  "id": 2423,
                  "name": "TimedCrowd",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2114,
                  "src": "1495:10:22"
                },
                {
                  "id": 2424,
                  "name": "WhitelistedCrowd",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2347,
                  "src": "1508:16:22"
                }
              ],
              "src": "1476:49:22"
            },
            "parameters": {
              "id": 2421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "1410:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2420,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "1436:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1404:54:22"
            },
            "returnParameters": {
              "id": 2426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:0:22"
            },
            "scope": 2436,
            "src": "1375:512:22",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2437,
        "src": "296:1594:22"
      }
    ],
    "src": "32:1858:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-10T18:04:34.457Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "checkRole(address,string)": {
        "details": "reverts if addr does not have role",
        "params": {
          "_operator": "address",
          "_role": "the name of the role // reverts"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getUserContribution(address)": {
        "details": "Returns the amount contributed so far by a sepecific user.",
        "params": {
          "_beneficiary": "Address of contributor"
        },
        "returns": {
          "_0": "User contribution so far"
        }
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "returns": {
          "_0": "Whether crowdsale period has elapsed"
        }
      },
      "hasRole(address,string)": {
        "details": "determine if addr has role",
        "params": {
          "_operator": "address",
          "_role": "the name of the role"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "whitelist(address)": {
        "details": "getter to determine if address is in whitelist"
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokenPurchase(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}