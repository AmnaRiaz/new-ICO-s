{
  "contractName": "Crowdsale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conform the base architecture for crowdsales. They are *not* intended to be modified / overriden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropiate to concatenate behavior.\",\"events\":{\"TokenPurchase(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_rate\":\"Number of token units a buyer gets per wei\",\"_token\":\"Address of the token being sold\",\"_wallet\":\"Address where collected funds will be forwarded to\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokenPurchase(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0xacded313eb5dfee414e3adf5d45bb5e7c57dfd983185b4e7078aeafdba563314\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51374873c5768d8a9095a7e664e75474029cfac1564cac59d184118afd3121c\",\"dweb:/ipfs/QmSqJKiBEgraJw3iLTbCGfqwBQDCHothGGbifE8envJ2JR\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x7cb9263f115e4f3581119a64f6e1d50c9dcc07b0dd8b2df50c5d03ef5d0763a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6bed25fa89cff09b790ed328422a2e10b9e02201fb1d90ddea324f33fb7e87f\",\"dweb:/ipfs/QmS6i9Di88aMbQh3wxVpQWdHLj1QuycpKzDNhYRcNek3BB\"]}},\"version\":1}",
  "bytecode": "0x6080604052604051610418380380610418833981810160405281019061002591906100f4565b8260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101d6565b6000815190506100c481610191565b92915050565b6000815190506100d9816101a8565b92915050565b6000815190506100ee816101bf565b92915050565b60008060006060848603121561010957600080fd5b6000610117868287016100df565b9350506020610128868287016100b5565b9250506040610139868287016100ca565b9150509250925092565b600061014e82610167565b9050919050565b600061016082610143565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61019a81610143565b81146101a557600080fd5b50565b6101b181610155565b81146101bc57600080fd5b50565b6101c881610187565b81146101d357600080fd5b50565b610233806101e56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c4e722e146100515780634042b66f1461006f578063521eb2731461008d578063fc0c546a146100ab575b600080fd5b6100596100c9565b6040516100669190610182565b60405180910390f35b6100776100cf565b6040516100849190610182565b60405180910390f35b6100956100d5565b6040516100a2919061014c565b60405180910390f35b6100b36100fb565b6040516100c09190610167565b60405180910390f35b60025481565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101288161019d565b82525050565b610137816101d9565b82525050565b610146816101cf565b82525050565b6000602082019050610161600083018461011f565b92915050565b600060208201905061017c600083018461012e565b92915050565b6000602082019050610197600083018461013d565b92915050565b60006101a8826101af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101e4826101eb565b9050919050565b60006101f6826101af565b905091905056fea264697066735822122050703f5fa405fcebd8817810df895597883453718a189f97e790862db5022f5d64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c4e722e146100515780634042b66f1461006f578063521eb2731461008d578063fc0c546a146100ab575b600080fd5b6100596100c9565b6040516100669190610182565b60405180910390f35b6100776100cf565b6040516100849190610182565b60405180910390f35b6100956100d5565b6040516100a2919061014c565b60405180910390f35b6100b36100fb565b6040516100c09190610167565b60405180910390f35b60025481565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101288161019d565b82525050565b610137816101d9565b82525050565b610146816101cf565b82525050565b6000602082019050610161600083018461011f565b92915050565b600060208201905061017c600083018461012e565b92915050565b6000602082019050610197600083018461013d565b92915050565b60006101a8826101af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101e4826101eb565b9050919050565b60006101f6826101af565b905091905056fea264697066735822122050703f5fa405fcebd8817810df895597883453718a189f97e790862db5022f5d64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1947:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:24"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:24",
                "type": ""
              }
            ],
            "src": "7:143:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "232:93:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "242:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "257:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "251:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "242:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "313:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$692",
                      "nodeType": "YulIdentifier",
                      "src": "273:39:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "273:46:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "273:46:24"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "210:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "218:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "226:5:24",
                "type": ""
              }
            ],
            "src": "156:169:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "394:80:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "404:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "419:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "413:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "413:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "404:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "462:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "435:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:33:24"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "372:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "380:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "388:5:24",
                "type": ""
              }
            ],
            "src": "331:143:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:498:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "650:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "659:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "662:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "652:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "652:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "652:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "625:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "634:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "621:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "621:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "646:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "617:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "614:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "676:128:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "691:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "705:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "695:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "720:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "766:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "777:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "762:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "762:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "786:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "730:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "720:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "814:129:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "829:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "843:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "833:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "859:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "905:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "916:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "901:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "901:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "925:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "869:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "869:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "859:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "953:142:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "968:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "982:2:24",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "972:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "998:87:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1057:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1068:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1053:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1053:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1077:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1008:44:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1008:77:24"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "998:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_contract$_ERC20_$692_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "558:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "569:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "581:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "589:6:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "597:6:24",
                "type": ""
              }
            ],
            "src": "480:622:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1153:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1163:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1192:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1174:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1174:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1163:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1135:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1145:7:24",
                "type": ""
              }
            ],
            "src": "1108:96:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1268:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1278:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1307:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1289:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1278:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1250:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1260:7:24",
                "type": ""
              }
            ],
            "src": "1210:109:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1370:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1380:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1395:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:42:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1391:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1380:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1352:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1362:7:24",
                "type": ""
              }
            ],
            "src": "1325:126:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1502:32:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1512:16:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1523:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1512:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1484:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1494:7:24",
                "type": ""
              }
            ],
            "src": "1457:77:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1583:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1640:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1649:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1652:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1642:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1642:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1642:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1606:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1631:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1613:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1613:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1603:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1596:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1596:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1593:2:24"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:24",
                "type": ""
              }
            ],
            "src": "1540:122:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1724:92:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1794:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1803:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1806:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1796:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1796:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1796:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1747:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1785:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$692",
                              "nodeType": "YulIdentifier",
                              "src": "1754:30:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1754:37:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1744:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1744:48:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1737:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:56:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1734:2:24"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1717:5:24",
                "type": ""
              }
            ],
            "src": "1668:148:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1922:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1931:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1934:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1924:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1924:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1888:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1913:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1895:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1895:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1885:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1885:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1878:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1875:2:24"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1858:5:24",
                "type": ""
              }
            ],
            "src": "1822:122:24"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$692_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$692(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_contract$_ERC20_$692_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_ERC20_$692_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$692(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$692(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$692(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1732:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:24"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:24",
                "type": ""
              }
            ],
            "src": "7:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "209:79:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "226:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "275:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$692_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "231:43:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:50:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "219:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "219:63:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "219:63:24"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "197:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "204:3:24",
                "type": ""
              }
            ],
            "src": "131:157:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "376:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "399:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "381:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "381:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "369:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "369:37:24"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "347:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "354:3:24",
                "type": ""
              }
            ],
            "src": "294:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "516:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "526:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "538:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "549:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "534:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "526:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "606:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "619:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "630:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "615:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "615:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "562:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "488:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "500:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "511:4:24",
                "type": ""
              }
            ],
            "src": "418:222:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:137:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "860:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "873:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "884:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "869:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "869:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:56:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:84:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:84:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$692__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:24",
                "type": ""
              }
            ],
            "src": "646:248:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "998:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1008:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1020:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1031:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1016:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1008:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1088:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1101:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1112:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1097:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1097:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1044:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1044:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "970:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "982:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "993:4:24",
                "type": ""
              }
            ],
            "src": "900:222:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1212:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1194:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1183:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1155:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1165:7:24",
                "type": ""
              }
            ],
            "src": "1128:96:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1275:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1285:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1300:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:42:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1296:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1285:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1257:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1267:7:24",
                "type": ""
              }
            ],
            "src": "1230:126:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1407:32:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1417:16:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1428:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1417:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1389:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1399:7:24",
                "type": ""
              }
            ],
            "src": "1362:77:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:79:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1528:63:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1585:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$692_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1541:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:50:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1528:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$692_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1498:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1508:9:24",
                "type": ""
              }
            ],
            "src": "1445:152:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1686:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1717:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1699:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1699:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1686:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$692_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1656:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1666:9:24",
                "type": ""
              }
            ],
            "src": "1603:126:24"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$692_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$692__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20_$692_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$692_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$692_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "939:5153:10:-:0;;;2047:236;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2231:5;2224:4;:12;;;;2251:7;2242:6;;:16;;;;;;;;;;;;;;;;;;2272:6;2264:5;;:14;;;;;;;;;;;;;;;;;;2047:236;;;939:5153;;7:143:24;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:169::-;;257:6;251:13;242:22;;273:46;313:5;273:46;:::i;:::-;232:93;;;;:::o;331:143::-;;419:6;413:13;404:22;;435:33;462:5;435:33;:::i;:::-;394:80;;;;:::o;480:622::-;;;;646:2;634:9;625:7;621:23;617:32;614:2;;;662:1;659;652:12;614:2;705:1;730:64;786:7;777:6;766:9;762:22;730:64;:::i;:::-;720:74;;676:128;843:2;869:64;925:7;916:6;905:9;901:22;869:64;:::i;:::-;859:74;;814:129;982:2;1008:77;1077:7;1068:6;1057:9;1053:22;1008:77;:::i;:::-;998:87;;953:142;604:498;;;;;:::o;1108:96::-;;1174:24;1192:5;1174:24;:::i;:::-;1163:35;;1153:51;;;:::o;1210:109::-;;1289:24;1307:5;1289:24;:::i;:::-;1278:35;;1268:51;;;:::o;1325:126::-;;1402:42;1395:5;1391:54;1380:65;;1370:81;;;:::o;1457:77::-;;1523:5;1512:16;;1502:32;;;:::o;1540:122::-;1613:24;1631:5;1613:24;:::i;:::-;1606:5;1603:35;1593:2;;1652:1;1649;1642:12;1593:2;1583:79;:::o;1668:148::-;1754:37;1785:5;1754:37;:::i;:::-;1747:5;1744:48;1734:2;;1806:1;1803;1796:12;1734:2;1724:92;:::o;1822:122::-;1895:24;1913:5;1895:24;:::i;:::-;1888:5;1885:35;1875:2;;1934:1;1931;1924:12;1875:2;1865:79;:::o;939:5153:10:-;;;;;;;",
  "deployedSourceMap": "939:5153:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1466:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1416:19;;;;:::o;1466:24::-;;;;:::o;1114:21::-;;;;;;;;;;;;;:::o;1052:18::-;;;;;;;;;;;;:::o;7:118:24:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:157::-;231:50;275:5;231:50;:::i;:::-;226:3;219:63;209:79;;:::o;294:118::-;381:24;399:5;381:24;:::i;:::-;376:3;369:37;359:53;;:::o;418:222::-;;549:2;538:9;534:18;526:26;;562:71;630:1;619:9;615:17;606:6;562:71;:::i;:::-;516:124;;;;:::o;646:248::-;;790:2;779:9;775:18;767:26;;803:84;884:1;873:9;869:17;860:6;803:84;:::i;:::-;757:137;;;;:::o;900:222::-;;1031:2;1020:9;1016:18;1008:26;;1044:71;1112:1;1101:9;1097:17;1088:6;1044:71;:::i;:::-;998:124;;;;:::o;1128:96::-;;1194:24;1212:5;1194:24;:::i;:::-;1183:35;;1173:51;;;:::o;1230:126::-;;1307:42;1300:5;1296:54;1285:65;;1275:81;;;:::o;1362:77::-;;1428:5;1417:16;;1407:32;;;:::o;1445:152::-;;1541:50;1585:5;1541:50;:::i;:::-;1528:63;;1518:79;;;:::o;1603:126::-;;1699:24;1717:5;1699:24;:::i;:::-;1686:37;;1676:53;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\n// import \"../token/ERC20/ERC20.sol\";\nimport \"./math/SafeMath.sol\";\n// import \"../token/ERC20/SafeERC20.sol\";\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n\n\n/**\n * @title Crowdsale\n * @dev Crowdsale is a base contract for managing a token crowdsale,\n * allowing investors to purchase tokens with ether. This contract implements\n * such functionality in its most fundamental form and can be extended to provide additional\n * functionality and/or custom behavior.\n * The external interface represents the basic interface for purchasing tokens, and conform\n * the base architecture for crowdsales. They are *not* intended to be modified / overriden.\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n * the methods to add functionality. Consider using 'super' where appropiate to concatenate\n * behavior.\n */\ncontract Crowdsale {\n  using SafeMath for uint256;\n\n//   using SafeERC20 for ERC20;\n\n  // The token being sold\n  ERC20 public token;\n\n  // Address where funds are collected\n  address public wallet;\n\n  // How many token units a buyer gets per wei.\n  // The rate is the conversion between wei and the smallest and indivisible token unit.\n  // So, if you are using a rate of 1 with a DetailedERC20 token with 3 decimals called TOK\n  // 1 wei will give you 1 unit, or 0.001 TOK.\n  uint256 public rate;\n\n  // Amount of wei raised\n  uint256 public weiRaised;\n\n  /**\n   * Event for token purchase logging\n   * @param purchaser who paid for the tokens\n   * @param beneficiary who got the tokens\n   * @param value weis paid for purchase\n   * @param amount amount of tokens purchased\n   */\n  event TokenPurchase(\n    address indexed purchaser,\n    address indexed beneficiary,\n    uint256 value,\n    uint256 amount\n  );\n\n  /**\n   * @param _rate Number of token units a buyer gets per wei\n   * @param _wallet Address where collected funds will be forwarded to\n   * @param _token Address of the token being sold\n   */\n  constructor(uint256 _rate, address _wallet, ERC20 _token) payable {\n    // require(_rate > 0);\n    // require(_wallet != address(0));\n    // require(_token != address(0));\n\n    rate = _rate;\n    wallet = _wallet;\n    token = _token;\n  }\n\n  // -----------------------------------------\n  // Crowdsale external interface\n  // -----------------------------------------\n\n  /**\n   * @dev fallback function ***DO NOT OVERRIDE***\n   */\n//   function () external payable {\n//     buyTokens(msg.sender);\n//   }\n\n  /**\n   * @dev low level token purchase ***DO NOT OVERRIDE***\n   * @param _beneficiary Address performing the token purchase\n   */\n//   function buyTokens(address _beneficiary) public payable {\n\n    //  uint256 weiAmount = msg.value;\n    //  _preValidatePurchase(_beneficiary, weiAmount);\n\n//     // calculate token amount to be created\n//     uint256 tokens = _getTokenAmount(weiAmount);\n\n//     // update state\n//     weiRaised = weiRaised.add(weiAmount);\n\n//     _processPurchase(_beneficiary, tokens);\n//     emit TokenPurchase(\n//       msg.sender,\n//       _beneficiary,\n//       weiAmount,\n//       tokens\n//     );\n\n//     _updatePurchasingState(_beneficiary, weiAmount);\n\n//     _forwardFunds();\n//     _postValidatePurchase(_beneficiary, weiAmount);\n//   }\n\n  // -----------------------------------------\n  // Internal interface (extensible)\n  // -----------------------------------------\n\n  /**\n   * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met. Use super to concatenate validations.\n   * @param _beneficiary Address performing the token purchase\n   * @param _weiAmount Value in wei involved in the purchase\n   */\n  function _preValidatePurchase(\n    address _beneficiary,\n    uint256 _weiAmount\n  )\n     internal\n     pure\n     virtual\n   \n  {\n    require(_beneficiary != address(0));\n    require(_weiAmount != 0);\n  }\n\n  /**\n   * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid conditions are not met.\n   * @param _beneficiary Address performing the token purchase\n   * @param _weiAmount Value in wei involved in the purchase\n   */\n  function _postValidatePurchase(\n    address _beneficiary,\n    uint256 _weiAmount\n  )\n    internal\n  {\n    // optional override\n  }\n\n  /**\n   * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends its tokens.\n   * @param _beneficiary Address performing the token purchase\n   * @param _tokenAmount Number of tokens to be emitted\n   */\n  function _deliverTokens(\n    address _beneficiary,\n    uint256 _tokenAmount\n  )\n//     internal\n//   {\n//     token.safeTransfer(_beneficiary, _tokenAmount);\n//   }\n\n  /**\n   * @dev Executed when a purchase has been validated and is ready to be executed. Not necessarily emits/sends tokens.\n   * @param _beneficiary Address receiving the tokens\n   * @param _tokenAmount Number of tokens to be purchased\n   */\n//   function _processPurchase(\n//     address _beneficiary,\n//     uint256 _tokenAmount\n//   )\n    internal\n  {\n    _deliverTokens(_beneficiary, _tokenAmount);\n  }\n\n  /**\n   * @dev Override for extensions that require an internal state to check for validity (current user contributions, etc.)\n   * @param _beneficiary Address receiving the tokens\n   * @param _weiAmount Value in wei involved in the purchase\n   */\n  function _updatePurchasingState(\n    address _beneficiary,\n    uint256 _weiAmount\n  )\n    internal\n  {\n    // optional override\n  }\n\n  /**\n   * @dev Override to extend the way in which ether is converted to tokens.\n   * @param _weiAmount Value in wei to be converted into tokens\n   * @return Number of tokens that can be purchased with the specified _weiAmount\n   */\n  function _getTokenAmount(uint256 _weiAmount)\n    internal view returns (uint256)\n  {\n    return _weiAmount.mul(rate);\n  }\n\n  /**\n   * @dev Determines how ETH is stored/forwarded on purchases.\n   */\n//   function _forwardFunds() internal {\n//     wallet.transfer(msg.value);\n//   }\n}",
  "sourcePath": "/home/muhammadbabarhanif/new ICO's/contracts/Crowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/Crowdsale.sol",
    "exportedSymbols": {
      "Context": [
        1177
      ],
      "Crowdsale": [
        1495
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        860
      ],
      "SafeMath": [
        2535
      ]
    },
    "id": 1496,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1374,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:10"
      },
      {
        "absolutePath": "project:/contracts/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 1375,
        "nodeType": "ImportDirective",
        "scope": 1496,
        "sourceUnit": 2536,
        "src": "104:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1376,
        "nodeType": "ImportDirective",
        "scope": 1496,
        "sourceUnit": 693,
        "src": "177:63:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1377,
          "nodeType": "StructuredDocumentation",
          "src": "243:695:10",
          "text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conform\n the base architecture for crowdsales. They are *not* intended to be modified / overriden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropiate to concatenate\n behavior."
        },
        "fullyImplemented": true,
        "id": 1495,
        "linearizedBaseContracts": [
          1495
        ],
        "name": "Crowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1380,
            "libraryName": {
              "id": 1378,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2535,
              "src": "968:8:10"
            },
            "nodeType": "UsingForDirective",
            "src": "962:27:10",
            "typeName": {
              "id": 1379,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "981:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1383,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1052:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 1382,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1381,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "1052:5:10"
              },
              "referencedDeclaration": 692,
              "src": "1052:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "521eb273",
            "id": 1385,
            "mutability": "mutable",
            "name": "wallet",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1114:21:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1384,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1114:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c4e722e",
            "id": 1387,
            "mutability": "mutable",
            "name": "rate",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1416:19:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1416:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4042b66f",
            "id": 1389,
            "mutability": "mutable",
            "name": "weiRaised",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1466:24:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1388,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1466:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1390,
              "nodeType": "StructuredDocumentation",
              "src": "1495:223:10",
              "text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
            },
            "id": 1400,
            "name": "TokenPurchase",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1392,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1746:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1394,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1777:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1396,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1810:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1829:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1740:107:10"
            },
            "src": "1721:127:10"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "2113:170:10",
              "statements": [
                {
                  "expression": {
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1411,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "2224:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1412,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "2231:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2224:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:12:10"
                },
                {
                  "expression": {
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1415,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1385,
                      "src": "2242:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1416,
                      "name": "_wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "2251:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2242:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1418,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:16:10"
                },
                {
                  "expression": {
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1419,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "2264:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1420,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1408,
                      "src": "2272:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2264:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "2264:14:10"
                }
              ]
            },
            "documentation": {
              "id": 1401,
              "nodeType": "StructuredDocumentation",
              "src": "1852:192:10",
              "text": " @param _rate Number of token units a buyer gets per wei\n @param _wallet Address where collected funds will be forwarded to\n @param _token Address of the token being sold"
            },
            "id": 1424,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2059:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2074:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2091:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1407,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1406,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "2091:5:10"
                    },
                    "referencedDeclaration": 692,
                    "src": "2091:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2058:46:10"
            },
            "returnParameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2113:0:10"
            },
            "scope": 1495,
            "src": "2047:236:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1447,
              "nodeType": "Block",
              "src": "3868:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1433,
                          "name": "_beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "3882:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3906:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3898:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3898:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3898:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3882:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3874:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1440,
                  "nodeType": "ExpressionStatement",
                  "src": "3874:35:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1442,
                          "name": "_weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1429,
                          "src": "3923:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3937:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3923:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3915:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3915:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:24:10"
                }
              ]
            },
            "documentation": {
              "id": 1425,
              "nodeType": "StructuredDocumentation",
              "src": "3453:285:10",
              "text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met. Use super to concatenate validations.\n @param _beneficiary Address performing the token purchase\n @param _weiAmount Value in wei involved in the purchase"
            },
            "id": 1448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "3776:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3776:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "3802:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3802:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3770:54:10"
            },
            "returnParameters": {
              "id": 1431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3868:0:10"
            },
            "scope": 1495,
            "src": "3741:203:10",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1456,
              "nodeType": "Block",
              "src": "4322:30:10",
              "statements": []
            },
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "3948:271:10",
              "text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid conditions are not met.\n @param _beneficiary Address performing the token purchase\n @param _weiAmount Value in wei involved in the purchase"
            },
            "id": 1457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "4258:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "4284:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4252:54:10"
            },
            "returnParameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4322:0:10"
            },
            "scope": 1495,
            "src": "4222:130:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "5135:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1466,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "5156:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1467,
                        "name": "_tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "5170:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1465,
                      "name": "_deliverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "5141:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "5141:42:10"
                }
              ]
            },
            "documentation": {
              "id": 1458,
              "nodeType": "StructuredDocumentation",
              "src": "4356:256:10",
              "text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends its tokens.\n @param _beneficiary Address performing the token purchase\n @param _tokenAmount Number of tokens to be emitted"
            },
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "4644:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4644:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1462,
                  "mutability": "mutable",
                  "name": "_tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "4670:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4670:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:56:10"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5135:0:10"
            },
            "scope": 1495,
            "src": "4615:573:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1479,
              "nodeType": "Block",
              "src": "5542:30:10",
              "statements": []
            },
            "documentation": {
              "id": 1472,
              "nodeType": "StructuredDocumentation",
              "src": "5192:246:10",
              "text": " @dev Override for extensions that require an internal state to check for validity (current user contributions, etc.)\n @param _beneficiary Address receiving the tokens\n @param _weiAmount Value in wei involved in the purchase"
            },
            "id": 1480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updatePurchasingState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "5478:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5478:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "5504:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5504:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5472:54:10"
            },
            "returnParameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5542:0:10"
            },
            "scope": 1495,
            "src": "5441:131:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "5893:38:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1490,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "5921:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1488,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "5906:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2473,
                      "src": "5906:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1487,
                  "id": 1492,
                  "nodeType": "Return",
                  "src": "5899:27:10"
                }
              ]
            },
            "documentation": {
              "id": 1481,
              "nodeType": "StructuredDocumentation",
              "src": "5576:231:10",
              "text": " @dev Override to extend the way in which ether is converted to tokens.\n @param _weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
            },
            "id": 1494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "5835:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5835:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5834:20:10"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1486,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "5882:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5882:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5881:9:10"
            },
            "scope": 1495,
            "src": "5810:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1496,
        "src": "939:5153:10"
      }
    ],
    "src": "32:6060:10"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Crowdsale.sol",
    "exportedSymbols": {
      "Context": [
        1177
      ],
      "Crowdsale": [
        1495
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        860
      ],
      "SafeMath": [
        2535
      ]
    },
    "id": 1496,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1374,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:10"
      },
      {
        "absolutePath": "project:/contracts/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 1375,
        "nodeType": "ImportDirective",
        "scope": 1496,
        "sourceUnit": 2536,
        "src": "104:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1376,
        "nodeType": "ImportDirective",
        "scope": 1496,
        "sourceUnit": 693,
        "src": "177:63:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1377,
          "nodeType": "StructuredDocumentation",
          "src": "243:695:10",
          "text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conform\n the base architecture for crowdsales. They are *not* intended to be modified / overriden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropiate to concatenate\n behavior."
        },
        "fullyImplemented": true,
        "id": 1495,
        "linearizedBaseContracts": [
          1495
        ],
        "name": "Crowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1380,
            "libraryName": {
              "id": 1378,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2535,
              "src": "968:8:10"
            },
            "nodeType": "UsingForDirective",
            "src": "962:27:10",
            "typeName": {
              "id": 1379,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "981:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1383,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1052:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 1382,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1381,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "1052:5:10"
              },
              "referencedDeclaration": 692,
              "src": "1052:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "521eb273",
            "id": 1385,
            "mutability": "mutable",
            "name": "wallet",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1114:21:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1384,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1114:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c4e722e",
            "id": 1387,
            "mutability": "mutable",
            "name": "rate",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1416:19:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1416:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4042b66f",
            "id": 1389,
            "mutability": "mutable",
            "name": "weiRaised",
            "nodeType": "VariableDeclaration",
            "scope": 1495,
            "src": "1466:24:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1388,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1466:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1390,
              "nodeType": "StructuredDocumentation",
              "src": "1495:223:10",
              "text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
            },
            "id": 1400,
            "name": "TokenPurchase",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1392,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1746:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1394,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1777:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1396,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1810:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1829:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1740:107:10"
            },
            "src": "1721:127:10"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "2113:170:10",
              "statements": [
                {
                  "expression": {
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1411,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "2224:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1412,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "2231:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2224:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:12:10"
                },
                {
                  "expression": {
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1415,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1385,
                      "src": "2242:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1416,
                      "name": "_wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "2251:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2242:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1418,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:16:10"
                },
                {
                  "expression": {
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1419,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "2264:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1420,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1408,
                      "src": "2272:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2264:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "2264:14:10"
                }
              ]
            },
            "documentation": {
              "id": 1401,
              "nodeType": "StructuredDocumentation",
              "src": "1852:192:10",
              "text": " @param _rate Number of token units a buyer gets per wei\n @param _wallet Address where collected funds will be forwarded to\n @param _token Address of the token being sold"
            },
            "id": 1424,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2059:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2074:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2091:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1407,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1406,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "2091:5:10"
                    },
                    "referencedDeclaration": 692,
                    "src": "2091:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2058:46:10"
            },
            "returnParameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2113:0:10"
            },
            "scope": 1495,
            "src": "2047:236:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1447,
              "nodeType": "Block",
              "src": "3868:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1433,
                          "name": "_beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "3882:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3906:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3898:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3898:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3898:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3882:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3874:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1440,
                  "nodeType": "ExpressionStatement",
                  "src": "3874:35:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1442,
                          "name": "_weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1429,
                          "src": "3923:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3937:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3923:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3915:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3915:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:24:10"
                }
              ]
            },
            "documentation": {
              "id": 1425,
              "nodeType": "StructuredDocumentation",
              "src": "3453:285:10",
              "text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met. Use super to concatenate validations.\n @param _beneficiary Address performing the token purchase\n @param _weiAmount Value in wei involved in the purchase"
            },
            "id": 1448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "3776:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3776:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "3802:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3802:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3770:54:10"
            },
            "returnParameters": {
              "id": 1431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3868:0:10"
            },
            "scope": 1495,
            "src": "3741:203:10",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1456,
              "nodeType": "Block",
              "src": "4322:30:10",
              "statements": []
            },
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "3948:271:10",
              "text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid conditions are not met.\n @param _beneficiary Address performing the token purchase\n @param _weiAmount Value in wei involved in the purchase"
            },
            "id": 1457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "4258:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1457,
                  "src": "4284:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4252:54:10"
            },
            "returnParameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4322:0:10"
            },
            "scope": 1495,
            "src": "4222:130:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "5135:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1466,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "5156:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1467,
                        "name": "_tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "5170:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1465,
                      "name": "_deliverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "5141:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "5141:42:10"
                }
              ]
            },
            "documentation": {
              "id": 1458,
              "nodeType": "StructuredDocumentation",
              "src": "4356:256:10",
              "text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends its tokens.\n @param _beneficiary Address performing the token purchase\n @param _tokenAmount Number of tokens to be emitted"
            },
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "4644:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4644:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1462,
                  "mutability": "mutable",
                  "name": "_tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "4670:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4670:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:56:10"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5135:0:10"
            },
            "scope": 1495,
            "src": "4615:573:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1479,
              "nodeType": "Block",
              "src": "5542:30:10",
              "statements": []
            },
            "documentation": {
              "id": 1472,
              "nodeType": "StructuredDocumentation",
              "src": "5192:246:10",
              "text": " @dev Override for extensions that require an internal state to check for validity (current user contributions, etc.)\n @param _beneficiary Address receiving the tokens\n @param _weiAmount Value in wei involved in the purchase"
            },
            "id": 1480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updatePurchasingState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "5478:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5478:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "5504:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5504:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5472:54:10"
            },
            "returnParameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5542:0:10"
            },
            "scope": 1495,
            "src": "5441:131:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "5893:38:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1490,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "5921:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1488,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "5906:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2473,
                      "src": "5906:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1487,
                  "id": 1492,
                  "nodeType": "Return",
                  "src": "5899:27:10"
                }
              ]
            },
            "documentation": {
              "id": 1481,
              "nodeType": "StructuredDocumentation",
              "src": "5576:231:10",
              "text": " @dev Override to extend the way in which ether is converted to tokens.\n @param _weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
            },
            "id": 1494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "5835:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5835:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5834:20:10"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1486,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "5882:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5882:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5881:9:10"
            },
            "scope": 1495,
            "src": "5810:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1496,
        "src": "939:5153:10"
      }
    ],
    "src": "32:6060:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-10T18:04:34.422Z",
  "devdoc": {
    "details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conform the base architecture for crowdsales. They are *not* intended to be modified / overriden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropiate to concatenate behavior.",
    "events": {
      "TokenPurchase(address,address,uint256,uint256)": {
        "params": {
          "amount": "amount of tokens purchased",
          "beneficiary": "who got the tokens",
          "purchaser": "who paid for the tokens",
          "value": "weis paid for purchase"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_rate": "Number of token units a buyer gets per wei",
          "_token": "Address of the token being sold",
          "_wallet": "Address where collected funds will be forwarded to"
        }
      }
    },
    "title": "Crowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokenPurchase(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}