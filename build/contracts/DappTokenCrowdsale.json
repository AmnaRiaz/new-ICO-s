{
  "contractName": "DappTokenCrowdsale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"TokenPurchase(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DappTokenCrowdsale.sol\":\"DappTokenCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0xacded313eb5dfee414e3adf5d45bb5e7c57dfd983185b4e7078aeafdba563314\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51374873c5768d8a9095a7e664e75474029cfac1564cac59d184118afd3121c\",\"dweb:/ipfs/QmSqJKiBEgraJw3iLTbCGfqwBQDCHothGGbifE8envJ2JR\"]},\"project:/contracts/DappTokenCrowdsale.sol\":{\"keccak256\":\"0x1718db13ee1617c9ab66dab2b9de077d3bd7dcf35b34ea4eb780c6f3ba2b99ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dc00143de86eb72ea3d8cb905c3c84d1f193fbb9e55005a07b028e4b7afc113\",\"dweb:/ipfs/QmQfnkhSSn8xw5o6E1nWrShxz4Rk5eiVN2cXwkP9U6eJWf\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x7cb9263f115e4f3581119a64f6e1d50c9dcc07b0dd8b2df50c5d03ef5d0763a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6bed25fa89cff09b790ed328422a2e10b9e02201fb1d90ddea324f33fb7e87f\",\"dweb:/ipfs/QmS6i9Di88aMbQh3wxVpQWdHLj1QuycpKzDNhYRcNek3BB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161042b38038061042b83398181016040528101906100329190610107565b8282828260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050506101e9565b6000815190506100d7816101a4565b92915050565b6000815190506100ec816101bb565b92915050565b600081519050610101816101d2565b92915050565b60008060006060848603121561011c57600080fd5b600061012a868287016100f2565b935050602061013b868287016100c8565b925050604061014c868287016100dd565b9150509250925092565b60006101618261017a565b9050919050565b600061017382610156565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101ad81610156565b81146101b857600080fd5b50565b6101c481610168565b81146101cf57600080fd5b50565b6101db8161019a565b81146101e657600080fd5b50565b610233806101f86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c4e722e146100515780634042b66f1461006f578063521eb2731461008d578063fc0c546a146100ab575b600080fd5b6100596100c9565b6040516100669190610182565b60405180910390f35b6100776100cf565b6040516100849190610182565b60405180910390f35b6100956100d5565b6040516100a2919061014c565b60405180910390f35b6100b36100fb565b6040516100c09190610167565b60405180910390f35b60025481565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101288161019d565b82525050565b610137816101d9565b82525050565b610146816101cf565b82525050565b6000602082019050610161600083018461011f565b92915050565b600060208201905061017c600083018461012e565b92915050565b6000602082019050610197600083018461013d565b92915050565b60006101a8826101af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101e4826101eb565b9050919050565b60006101f6826101af565b905091905056fea2646970667358221220cb7d06f39405b8559f67b66c268ce80c28c78903570501c27b0716e31b01c7c264736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c4e722e146100515780634042b66f1461006f578063521eb2731461008d578063fc0c546a146100ab575b600080fd5b6100596100c9565b6040516100669190610182565b60405180910390f35b6100776100cf565b6040516100849190610182565b60405180910390f35b6100956100d5565b6040516100a2919061014c565b60405180910390f35b6100b36100fb565b6040516100c09190610167565b60405180910390f35b60025481565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101288161019d565b82525050565b610137816101d9565b82525050565b610146816101cf565b82525050565b6000602082019050610161600083018461011f565b92915050565b600060208201905061017c600083018461012e565b92915050565b6000602082019050610197600083018461013d565b92915050565b60006101a8826101af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101e4826101eb565b9050919050565b60006101f6826101af565b905091905056fea2646970667358221220cb7d06f39405b8559f67b66c268ce80c28c78903570501c27b0716e31b01c7c264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1947:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:7",
                "type": ""
              }
            ],
            "src": "7:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "232:93:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "242:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "257:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "251:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "242:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "313:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$587",
                      "nodeType": "YulIdentifier",
                      "src": "273:39:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "273:46:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "273:46:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$587_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "210:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "218:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "226:5:7",
                "type": ""
              }
            ],
            "src": "156:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "394:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "404:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "419:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "413:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "413:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "404:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "462:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "435:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "372:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "380:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "388:5:7",
                "type": ""
              }
            ],
            "src": "331:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:498:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "650:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "659:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "662:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "652:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "652:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "652:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "625:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "634:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "621:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "621:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "646:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "617:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "614:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "676:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "691:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "705:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "695:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "720:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "766:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "777:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "762:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "762:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "786:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "730:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "720:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "814:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "829:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "843:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "833:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "859:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "905:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "916:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "901:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "901:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "925:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "869:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "869:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "859:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "953:142:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "968:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "982:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "972:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "998:87:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1057:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1068:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1053:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1053:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1077:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$587_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1008:44:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1008:77:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "998:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_contract$_ERC20_$587_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "558:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "569:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "581:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "589:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "597:6:7",
                "type": ""
              }
            ],
            "src": "480:622:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1153:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1163:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1192:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1174:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1174:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1163:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1135:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1145:7:7",
                "type": ""
              }
            ],
            "src": "1108:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1268:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1278:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1307:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1289:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1278:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$587",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1250:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1260:7:7",
                "type": ""
              }
            ],
            "src": "1210:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1370:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1380:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1395:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1391:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1380:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1352:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1362:7:7",
                "type": ""
              }
            ],
            "src": "1325:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1502:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1512:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1523:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1512:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1484:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1494:7:7",
                "type": ""
              }
            ],
            "src": "1457:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1583:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1640:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1649:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1652:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1642:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1642:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1642:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1606:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1631:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1613:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1613:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1603:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1596:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1596:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1593:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:7",
                "type": ""
              }
            ],
            "src": "1540:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1724:92:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1794:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1803:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1806:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1796:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1796:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1796:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1747:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1785:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$587",
                              "nodeType": "YulIdentifier",
                              "src": "1754:30:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1754:37:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1744:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1744:48:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1737:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:56:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1734:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$587",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1717:5:7",
                "type": ""
              }
            ],
            "src": "1668:148:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1922:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1931:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1934:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1924:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1924:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1888:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1913:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1895:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1895:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1885:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1885:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1878:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1875:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1858:5:7",
                "type": ""
              }
            ],
            "src": "1822:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$587_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$587(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_contract$_ERC20_$587_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_ERC20_$587_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$587(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$587(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$587(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1732:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:7",
                "type": ""
              }
            ],
            "src": "7:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "209:79:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "226:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "275:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$587_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "231:43:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:50:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "219:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "219:63:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "219:63:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "197:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "204:3:7",
                "type": ""
              }
            ],
            "src": "131:157:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "376:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "399:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "381:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "381:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "369:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "369:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "347:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "354:3:7",
                "type": ""
              }
            ],
            "src": "294:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "516:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "526:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "538:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "549:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "534:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "526:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "606:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "619:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "630:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "615:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "615:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "562:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "488:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "500:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "511:4:7",
                "type": ""
              }
            ],
            "src": "418:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:137:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "860:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "873:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "884:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "869:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "869:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:56:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:84:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:84:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:7",
                "type": ""
              }
            ],
            "src": "646:248:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "998:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1008:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1020:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1031:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1016:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1008:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1088:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1101:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1112:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1097:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1097:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1044:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1044:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "970:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "982:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "993:4:7",
                "type": ""
              }
            ],
            "src": "900:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1212:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1194:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1183:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1155:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1165:7:7",
                "type": ""
              }
            ],
            "src": "1128:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1275:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1285:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1300:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1296:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1285:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1257:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1267:7:7",
                "type": ""
              }
            ],
            "src": "1230:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1407:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1417:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1428:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1417:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1389:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1399:7:7",
                "type": ""
              }
            ],
            "src": "1362:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1528:63:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1585:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1541:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:50:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1528:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1498:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1508:9:7",
                "type": ""
              }
            ],
            "src": "1445:152:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1686:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1717:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1699:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1699:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1686:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1656:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1666:9:7",
                "type": ""
              }
            ],
            "src": "1603:126:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$587_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$587_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "94:172:5:-:0;;;140:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;228:5;235:7;244:6;2231:5:4;2224:4;:12;;;;2251:7;2242:6;;:16;;;;;;;;;;;;;;;;;;2272:6;2264:5;;:14;;;;;;;;;;;;;;;;;;2047:236;;;140:124:5;;;94:172;;7:143:7;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:169::-;;257:6;251:13;242:22;;273:46;313:5;273:46;:::i;:::-;232:93;;;;:::o;331:143::-;;419:6;413:13;404:22;;435:33;462:5;435:33;:::i;:::-;394:80;;;;:::o;480:622::-;;;;646:2;634:9;625:7;621:23;617:32;614:2;;;662:1;659;652:12;614:2;705:1;730:64;786:7;777:6;766:9;762:22;730:64;:::i;:::-;720:74;;676:128;843:2;869:64;925:7;916:6;905:9;901:22;869:64;:::i;:::-;859:74;;814:129;982:2;1008:77;1077:7;1068:6;1057:9;1053:22;1008:77;:::i;:::-;998:87;;953:142;604:498;;;;;:::o;1108:96::-;;1174:24;1192:5;1174:24;:::i;:::-;1163:35;;1153:51;;;:::o;1210:109::-;;1289:24;1307:5;1289:24;:::i;:::-;1278:35;;1268:51;;;:::o;1325:126::-;;1402:42;1395:5;1391:54;1380:65;;1370:81;;;:::o;1457:77::-;;1523:5;1512:16;;1502:32;;;:::o;1540:122::-;1613:24;1631:5;1613:24;:::i;:::-;1606:5;1603:35;1593:2;;1652:1;1649;1642:12;1593:2;1583:79;:::o;1668:148::-;1754:37;1785:5;1754:37;:::i;:::-;1747:5;1744:48;1734:2;;1806:1;1803;1796:12;1734:2;1724:92;:::o;1822:122::-;1895:24;1913:5;1895:24;:::i;:::-;1888:5;1885:35;1875:2;;1934:1;1931;1924:12;1875:2;1865:79;:::o;94:172:5:-;;;;;;;",
  "deployedSourceMap": "94:172:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:19:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1466:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1416:19;;;;:::o;1466:24::-;;;;:::o;1114:21::-;;;;;;;;;;;;;:::o;1052:18::-;;;;;;;;;;;;:::o;7:118:7:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:157::-;231:50;275:5;231:50;:::i;:::-;226:3;219:63;209:79;;:::o;294:118::-;381:24;399:5;381:24;:::i;:::-;376:3;369:37;359:53;;:::o;418:222::-;;549:2;538:9;534:18;526:26;;562:71;630:1;619:9;615:17;606:6;562:71;:::i;:::-;516:124;;;;:::o;646:248::-;;790:2;779:9;775:18;767:26;;803:84;884:1;873:9;869:17;860:6;803:84;:::i;:::-;757:137;;;;:::o;900:222::-;;1031:2;1020:9;1016:18;1008:26;;1044:71;1112:1;1101:9;1097:17;1088:6;1044:71;:::i;:::-;998:124;;;;:::o;1128:96::-;;1194:24;1212:5;1194:24;:::i;:::-;1183:35;;1173:51;;;:::o;1230:126::-;;1307:42;1300:5;1296:54;1285:65;;1275:81;;;:::o;1362:77::-;;1428:5;1417:16;;1407:32;;;:::o;1445:152::-;;1541:50;1585:5;1541:50;:::i;:::-;1528:63;;1518:79;;;:::o;1603:126::-;;1699:24;1717:5;1699:24;:::i;:::-;1686:37;;1676:53;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./Crowdsale.sol\";\n\n\ncontract DappTokenCrowdsale is Crowdsale {\n\n  constructor(\n    uint256 _rate,\n    address _wallet,\n    ERC20 _token\n  )\n    Crowdsale(_rate, _wallet, _token)\n   \n  {\n\n  }\n}",
  "sourcePath": "/home/muhammadbabarhanif/new ICO's/contracts/DappTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/DappTokenCrowdsale.sol",
    "exportedSymbols": {
      "Context": [
        712
      ],
      "Crowdsale": [
        835
      ],
      "DappTokenCrowdsale": [
        857
      ],
      "ERC20": [
        587
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "SafeMath": [
        956
      ]
    },
    "id": 858,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 837,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:5"
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "./Crowdsale.sol",
        "id": 838,
        "nodeType": "ImportDirective",
        "scope": 858,
        "sourceUnit": 836,
        "src": "66:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 839,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 835,
              "src": "125:9:5"
            },
            "id": 840,
            "nodeType": "InheritanceSpecifier",
            "src": "125:9:5"
          }
        ],
        "contractDependencies": [
          835
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 857,
        "linearizedBaseContracts": [
          857,
          835
        ],
        "name": "DappTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 855,
              "nodeType": "Block",
              "src": "258:6:5",
              "statements": []
            },
            "id": 856,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 850,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 842,
                    "src": "228:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 851,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "235:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 852,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 847,
                    "src": "244:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 853,
                "modifierName": {
                  "id": 849,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 835,
                  "src": "218:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "218:33:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "157:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "176:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "197:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 845,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "197:5:5"
                    },
                    "referencedDeclaration": 587,
                    "src": "197:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "151:62:5"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "258:0:5"
            },
            "scope": 857,
            "src": "140:124:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 858,
        "src": "94:172:5"
      }
    ],
    "src": "32:234:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/DappTokenCrowdsale.sol",
    "exportedSymbols": {
      "Context": [
        712
      ],
      "Crowdsale": [
        835
      ],
      "DappTokenCrowdsale": [
        857
      ],
      "ERC20": [
        587
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "SafeMath": [
        956
      ]
    },
    "id": 858,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 837,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:5"
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "./Crowdsale.sol",
        "id": 838,
        "nodeType": "ImportDirective",
        "scope": 858,
        "sourceUnit": 836,
        "src": "66:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 839,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 835,
              "src": "125:9:5"
            },
            "id": 840,
            "nodeType": "InheritanceSpecifier",
            "src": "125:9:5"
          }
        ],
        "contractDependencies": [
          835
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 857,
        "linearizedBaseContracts": [
          857,
          835
        ],
        "name": "DappTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 855,
              "nodeType": "Block",
              "src": "258:6:5",
              "statements": []
            },
            "id": 856,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 850,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 842,
                    "src": "228:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 851,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "235:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 852,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 847,
                    "src": "244:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 853,
                "modifierName": {
                  "id": 849,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 835,
                  "src": "218:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "218:33:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "157:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "176:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "197:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 845,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "197:5:5"
                    },
                    "referencedDeclaration": 587,
                    "src": "197:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "151:62:5"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "258:0:5"
            },
            "scope": 857,
            "src": "140:124:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 858,
        "src": "94:172:5"
      }
    ],
    "src": "32:234:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4503E4FD63cE8a527e04a3B8561a09dA51786C5e",
      "transactionHash": "0xc6003b19fb88df4f097fda423097319f3f8c803e407c6d7d7451ee3ea6c98490"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-10T18:41:17.037Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokenPurchase(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}